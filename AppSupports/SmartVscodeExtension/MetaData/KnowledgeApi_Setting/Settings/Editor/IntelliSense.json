[
    {
        "id": "editor.quickSuggestions",
        "desc": " Controls whether suggestions should automatically show up while typing.",
        "example": {
            "editor.quickSuggestions": {
                "other": "on",
                "comments": "off",
                "strings": "off"
            }
        }
    },
    {
        "id": "editor.acceptSuggestionOnEnter",
        "desc": " Controls whether suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.\n  - on\n  - smart: Only accept a suggestion with `Enter` when it makes a textual change.\n  - off",
        "example": {
            "editor.acceptSuggestionOnEnter": "on"
        }
    },
    {
        "id": "editor.quickSuggestionsDelay",
        "desc": " Controls the delay in milliseconds after which quick suggestions will show up.",
        "example": {
            "editor.quickSuggestionsDelay": 10
        }
    },
    {
        "id": "editor.suggestOnTriggerCharacters",
        "desc": " Controls whether suggestions should automatically show up when typing trigger characters.",
        "example": {
            "editor.suggestOnTriggerCharacters": true
        }
    },
    {
        "id": "editor.suggest.localityBonus",
        "desc": " Controls whether sorting favors words that appear close to the cursor.",
        "example": {
            "editor.suggest.localityBonus": false
        }
    },
    {
        "id": "editor.suggestSelection",
        "desc": " Controls how suggestions are pre-selected when showing the suggest list.\n  - first: Always select the first suggestion.\n  - recentlyUsed: Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.\n  - recentlyUsedByPrefix: Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`.",
        "example": {
            "editor.suggestSelection": "first"
        }
    },
    {
        "id": "editor.wordBasedSuggestions",
        "desc": " Controls whether completions should be computed based on words in the document and from which documents they are computed.\n  - off: Turn off Word Based Suggestions.\n  - currentDocument: Only suggest words from the active document.\n  - matchingDocuments: Suggest words from all open documents of the same language.\n  - allDocuments: Suggest words from all open documents.",
        "example": {
            "editor.wordBasedSuggestions": "matchingDocuments"
        }
    },
    {
        "id": "editor.parameterHints.enabled",
        "desc": " Enables a pop-up that shows parameter documentation and type information as you type.",
        "example": {
            "editor.parameterHints.enabled": true
        }
    }
  ]